装饰模式通过创建一个包装对象，也就是装饰，来包裹真实的对象。
装饰模式的角色:
抽象构件角色（Component）：给出一个抽象接口，以规范准备接收附加责任的对象。
具体构件角色（Concrete Component）：定义将要接收附加责任的类。
装饰角色（Decorator）：持有一个构件（Component）对象的引用，并定义一个与抽象构件接口一致的接口。
具体装饰角色（Concrete Decorator）：负责给构件对象“贴上”附加的责任。
Java中的IO正是装饰者模式的体现，需要注意的是装饰的抽象类有时候可以直接由顶层的Component兼任，Mybatis
中的Cache采用的就是这种设计。
  